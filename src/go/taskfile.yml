# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

env:
  GO_TARGET_ARCH: "darwin"

tasks:
  test_prereq: 
    internal: true
    dir: src/go/async-api-gen-doc
    preconditions:
      - go version
    cmd: |
      mkdir -p .coverage
      go install github.com/jstemmer/go-junit-report/v2@latest
      go install github.com/axw/gocov/gocov@latest
      go install github.com/AlekSi/gocov-xml@latest

  clean_go:
    internal: true
    cmds:
      - rm -rf dist/go/*
      - mkdir -p dist/go

  test:
    desc: Install dependencies
    internal: false
    dir: src/go/async-api-gen-doc
    deps:
      - test_prereq
    cmd: |
      set -exo pipefail
      go test ./... -timeout 30s -v -mod=readonly -race -coverprofile=.coverage/out > .coverage/test.out
  

  install:
    desc: Install dependencies
    internal: true
    dir: src/go/async-api-gen-doc
    cmd: |
      go mod tidy
  
  lint:
    desc: Runs lint and vet 
    dir: src/go/async-api-gen-doc
    cmd: |
      go vet 

  coverage:
    desc: generate coverage
    dir: src/go/async-api-gen-doc
    deps:
      - test
    cmds: 
      - go-junit-report -in .coverage/test.out > .coverage/go-junit.xml
      - gocov convert .coverage/out | gocov-xml > .coverage/cobertura.xml

  show_coverage: 
    desc: Opens the current coverage viewer for the the gendoc utility.
    dir: src/go/async-api-gen-doc
    deps:
      - coverage
    cmd: go tool cover -html=.coverage/out

  show_docs:
    desc: Opens a webview with godoc running
    dir: src/go/async-api-gen-doc
    summary: |
      Already filters the packages to this one and enables
      internal/private package documentation
    cmd: |
      go install golang.org/x/tools/cmd/godoc@latest
      open http://localhost:6060/pkg/github.com/dnitsch/async-api-generator/?m=all
      godoc -notes "BUG|TODO" -play -http=:6060

  bin: 
    desc: Generates binaries in a dist folder
    summary: |
      Generates all the binaries for the gendoc utility.

      can be called from inside CI like this:
      
      `task async-api-generator:bin GIT_TAG=0.1.2 REVISION=$commit_sha`
    deps:
      - clean_go
    cmds:
      - for: { var: GO_ARCHS, as: GO_TARGET_ARCH }
        cmd: | 
          mkdir -p ./dist/go/{{.GO_TARGET_ARCH}}
          GOOS={{.GO_TARGET_ARCH}} CGO_ENABLED=0 go build -mod=readonly -buildvcs=false {{.LDFLAGS}} -o ./dist/go/{{.GO_TARGET_ARCH}}/gendoc ./src/go/async-api-gen-doc/cmd
          cp README.md ./dist/go/{{.GO_TARGET_ARCH}}/README.md
    vars:
      LDFLAGS: -ldflags="-s -w -X \"github.com/dnitsch/async-api-generator/cmd/async-api-gen-doc.Version=${VERSION}\" -X \"github.com/dnitsch/async-api-generator/cmd/async-api-gen-doc.Revision={{.REVISION}}\" -extldflags -static"
      GO_ARCHS: darwin windows linux
